# Generated by roxygen2: do not edit by hand

S3method("!",network)
S3method("%c%",network)
S3method("&",network)
S3method("*",network)
S3method("+",network)
S3method("-",network)
S3method("[",network)
S3method("[<-",network)
S3method("|",network)
S3method(add.edge,network)
S3method(add.edges,network)
S3method(add.vertices,network)
S3method(as.data.frame,network)
S3method(as.edgelist,matrix)
S3method(as.edgelist,network)
S3method(as.edgelist,tbl_df)
S3method(as.matrix,network)
S3method(as.matrix.network,adjacency)
S3method(as.matrix.network,edgelist)
S3method(as.matrix.network,incidence)
S3method(as.network,data.frame)
S3method(as.network,default)
S3method(as.network,matrix)
S3method(as.network,network)
S3method(as.tibble,network)
S3method(as_tibble,network)
S3method(delete.edge.attribute,network)
S3method(delete.network.attribute,network)
S3method(delete.vertex.attribute,network)
S3method(get.edge.attribute,list)
S3method(get.edge.attribute,network)
S3method(get.edge.value,list)
S3method(get.edge.value,network)
S3method(get.network.attribute,network)
S3method(get.vertex.attribute,network)
S3method(is.na,network)
S3method(list.edge.attributes,network)
S3method(list.network.attributes,network)
S3method(list.vertex.attributes,network)
S3method(mixingmatrix,network)
S3method(network.dyadcount,network)
S3method(network.edgecount,network)
S3method(network.naedgecount,network)
S3method(network.size,network)
S3method(plot,network)
S3method(plot.network,default)
S3method(print,mixingmatrix)
S3method(print,network)
S3method(print,summary.network)
S3method(prod,network)
S3method(set.edge.attribute,network)
S3method(set.edge.value,network)
S3method(set.network.attribute,network)
S3method(set.vertex.attribute,network)
S3method(sum,network)
S3method(summary,network)
export("!.network")
export("%c%")
export("%c%.network")
export("%e%")
export("%e%<-")
export("%eattr%")
export("%eattr%<-")
export("%n%")
export("%n%<-")
export("%nattr%")
export("%nattr%<-")
export("%s%")
export("%v%")
export("%v%<-")
export("%vattr%")
export("%vattr%<-")
export("&.network")
export("*.network")
export("+.network")
export("-.network")
export("<-.network")
export("[.network")
export("[<-.network")
export("network.vertex.names<-")
export("|.network")
export(add.edge)
export(add.edge.network)
export(add.edges)
export(add.edges.network)
export(add.vertices)
export(add.vertices.network)
export(as.color)
export(as.data.frame.network)
export(as.edgelist)
export(as.edgelist.matrix)
export(as.matrix.network)
export(as.matrix.network.adjacency)
export(as.matrix.network.edgelist)
export(as.matrix.network.incidence)
export(as.network)
export(as.network.data.frame)
export(as.network.default)
export(as.network.matrix)
export(as.network.network)
export(as.sociomatrix)
export(delete.edge.attribute)
export(delete.edges)
export(delete.network.attribute)
export(delete.vertex.attribute)
export(delete.vertices)
export(get.dyads.eids)
export(get.edge.attribute)
export(get.edge.value)
export(get.edgeIDs)
export(get.edges)
export(get.inducedSubgraph)
export(get.neighborhood)
export(get.network.attribute)
export(get.vertex.attribute)
export(has.edges)
export(has.loops)
export(is.adjacent)
export(is.bipartite)
export(is.color)
export(is.directed)
export(is.discrete)
export(is.discrete.character)
export(is.discrete.numeric)
export(is.edgelist)
export(is.hyper)
export(is.multiplex)
export(is.na.network)
export(is.network)
export(list.edge.attributes)
export(list.network.attributes)
export(list.vertex.attributes)
export(mixingmatrix)
export(network)
export(network.adjacency)
export(network.arrow)
export(network.bipartite)
export(network.copy)
export(network.density)
export(network.dyadcount)
export(network.edgecount)
export(network.edgelabel)
export(network.edgelist)
export(network.incidence)
export(network.initialize)
export(network.layout.circle)
export(network.layout.fruchtermanreingold)
export(network.layout.kamadakawai)
export(network.loop)
export(network.naedgecount)
export(network.size)
export(network.vertex)
export(network.vertex.names)
export(permute.vertexIDs)
export(plot.network)
export(plot.network.default)
export(plotArgs.network)
export(print.mixingmatrix)
export(print.network)
export(print.summary.network)
export(prod.network)
export(read.paj)
export(set.edge.attribute)
export(set.edge.value)
export(set.network.attribute)
export(set.vertex.attribute)
export(sum.network)
export(summary.network)
export(valid.eids)
export(which.matrix.type)
import(utils)
importFrom(grDevices,colors)
importFrom(grDevices,gray)
importFrom(graphics,locator)
importFrom(graphics,par)
importFrom(graphics,plot)
importFrom(graphics,polygon)
importFrom(graphics,rect)
importFrom(graphics,strheight)
importFrom(graphics,strwidth)
importFrom(graphics,text)
importFrom(magrittr,"%>%")
importFrom(magrittr,set_names)
importFrom(statnet.common,once)
importFrom(stats,na.omit)
importFrom(stats,rnorm)
importFrom(tibble,as.tibble)
importFrom(tibble,as_tibble)
importFrom(tibble,tibble)
useDynLib(network, .registration = TRUE)
